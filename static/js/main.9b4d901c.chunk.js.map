{"version":3,"sources":["App.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","ClickableMapComponent","props","useMapEvent","e","savePosFunc","latlng","TileLayer","attribution","url","Marker","prototype","options","Jumpoint","this","jumpoint","id","name","description","weather","createdAt","React","Component","SmallMap","MapContainer","className","center","zoom","scrollWheelZoom","MyAddModal","Modal","show","onHide","handleClose","backdrop","keyboard","size","Header","closeButton","Title","Body","Container","Row","Col","md","Form","Group","Label","Control","type","value","state","onChange","handleChange","as","rows","location","lat","readOnly","lng","savePosition","Footer","Button","variant","onClick","handleSubmit","MyUpdateModal","controlId","Menu","handleAddClose","bind","handleAddShow","showAdd","setState","event","label","target","preventDefault","fetch","method","headers","body","JSON","stringify","then","updateFunc","fluid","displayFunc","handleShow","MyMap","position","latitude","longitude","eventHandlers","click","myFunc","Popup","setIdFunc","delFunc","items","map","item","renderJumpoint","Data","App","switchLocation","getData","setPlaceId","handleUpdateClose","handleUpdateShow","delPosition","handleListMapToggle","showMap","showUpdate","placeId","response","json","originalArr","slice","index","indexOf","splice","loadDataByID","resetData","getIndexById","console","log","point","input","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b4d901c.chunk.js","sourcesContent":["import React from 'react';\nimport {MapContainer, TileLayer, Marker, Popup, useMapEvent} from 'react-leaflet'\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Container, Row, Col, Button, Modal, Form} from 'react-bootstrap';\nimport './App.css';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [24, 36],\n    iconAnchor: [12, 36]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nfunction ClickableMapComponent(props) {\n    useMapEvent('click', (e) => {\n        props.savePosFunc(e.latlng);\n    })\n\n    return (\n        <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n    )\n}\n\nclass Jumpoint extends React.Component {\n    render() {\n        return (\n            <tr>\n                <td>{this.props.jumpoint.id}</td>\n                <td>{this.props.jumpoint.name}</td>\n                <td>{this.props.jumpoint.description}</td>\n                <td>{this.props.jumpoint.weather}</td>\n                <td>{this.props.jumpoint.createdAt}</td>\n            </tr>\n        )\n    }\n}\n\nclass SmallMap extends React.Component {\n    render() {\n        const center = [49.873398, 15.534668];\n\n        return (\n            <MapContainer className=\"smallMap\" center={center} zoom={6} scrollWheelZoom={true}>\n                <ClickableMapComponent savePosFunc={this.props.savePosFunc}/>\n            </MapContainer>\n        )\n    }\n}\n\nclass MyAddModal extends React.Component {\n    render() {\n        return (\n            <Modal show={this.props.show} onHide={this.props.handleClose} backdrop=\"static\"\n                   keyboard={false} size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Add new place</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    <Container>\n                        <Row>\n                            <Col md={4}>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Label>Name:</Form.Label>\n                                        <Form.Control type=\"text\" name=\"name\" id=\"name\" value={this.props.state.name}\n                                                      onChange={(e) => this.props.handleChange(e, 'name')}/>\n                                        <Form.Label>Description:</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={3} id=\"description\" name=\"description\"\n                                                      value={this.props.state.description}\n                                                      onChange={(e) => this.props.handleChange(e, 'description')}/>\n                                        <Form.Label>Latitude:</Form.Label>\n                                        <Form.Control type=\"text\" id=\"latitude\" name=\"latitude\"\n                                                      value={this.props.state.location.lat}\n                                                      readOnly/>\n                                        <Form.Label>Longitude:</Form.Label>\n                                        <Form.Control type=\"text\" id=\"longitude\" name=\"longitude\"\n                                                      value={this.props.state.location.lng} readOnly/>\n                                    </Form.Group>\n                                </Form>\n                                {/*<form>*/}\n                                {/*    <label htmlFor=\"name\">Name: </label>*/}\n                                {/*    <input type=\"text\" name=\"name\" id=\"name\" value={this.props.state.name}*/}\n                                {/*           onChange={(e) => this.props.handleChange(e, 'name')}/>*/}\n                                {/*    <label htmlFor=\"description\">Description: </label>*/}\n                                {/*    <input type=\"text\" id=\"description\" name=\"description\"*/}\n                                {/*           value={this.props.state.description}*/}\n                                {/*           onChange={(e) => this.props.handleChange(e, 'description')}/>*/}\n                                {/*    <label htmlFor=\"latitude\">Latitude: </label>*/}\n                                {/*    <input type=\"text\" id=\"latitude\" name=\"latitude\"*/}\n                                {/*           value={this.props.state.location.lat}*/}\n                                {/*           disabled/>*/}\n                                {/*    <label htmlFor=\"longitude\">Longitude: </label>*/}\n                                {/*    <input type=\"text\" id=\"longitude\" name=\"longitude\"*/}\n                                {/*           value={this.props.state.location.lng}*/}\n                                {/*           disabled/>*/}\n\n                                {/*</form>*/}\n                            </Col>\n                            <Col md={8}>\n                                <p>Click on map to locate</p>\n                                <SmallMap savePosFunc={this.props.savePosition}/>\n                            </Col>\n                        </Row>\n\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.props.handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.props.handleSubmit}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n\n            </Modal>\n        )\n    }\n}\n\nclass MyUpdateModal extends React.Component {\n    render() {\n        return (\n            <Modal className=\"updateModal\" show={this.props.show} onHide={this.props.handleClose} backdrop=\"static\"\n                   keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update place {this.props.state.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"show-grid\">\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Name:</Form.Label>\n                            <Form.Control type=\"text\" name=\"name\" id=\"name\" value={this.props.state.name} readOnly/>\n                            <Form.Label>Description:</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} name=\"description\" id=\"description\"\n                                          value={this.props.state.description}\n                                          onChange={this.props.handleChange}/>\n                            <Form.Label>Latitude:</Form.Label>\n                            <Form.Control type=\"text\" id=\"latitude\" name=\"latitude\"\n                                          value={this.props.state.location.lat}\n                                          readOnly/>\n                            <Form.Label>Longitude:</Form.Label>\n                            <Form.Control type=\"text\" id=\"longitude\" name=\"longitude\"\n                                          value={this.props.state.location.lng} readOnly/>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.props.handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.props.handleSubmit}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n\n            </Modal>\n        )\n    }\n}\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleAddClose = this.handleAddClose.bind(this);\n        this.handleAddShow = this.handleAddShow.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.savePosition = this.savePosition.bind(this);\n\n        this.state = {\n            showAdd: false,\n            name: '',\n            description: '',\n            location: {\n                lat: '',\n                lng: ''\n            }\n        }\n    }\n\n    savePosition(latlng) {\n        this.setState({location: latlng});\n    }\n\n    handleAddClose() {\n        this.setState({\n            showAdd: false\n        });\n    }\n\n    handleAddShow() {\n        this.setState({\n            showAdd: true\n        });\n    }\n\n    handleChange(event, label) {\n        if (label === \"name\") {\n            this.setState({name: event.target.value});\n        }\n\n        if (label === \"description\") {\n            this.setState({description: event.target.value});\n        }\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        fetch('https://jumpoints.herokuapp.com/api/jumpoints', {\n        // fetch('http://www.localhost:8080/api/jumpoints', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"name\": this.state.name,\n                \"description\": this.state.description,\n                \"latitude\": this.state.location.lat,\n                \"longitude\": this.state.location.lng\n            })\n        }).then(() => {\n            this.props.updateFunc();\n            this.setState({\n                showAdd: false,\n                name: '',\n                description: '',\n                location: {\n                    lat: '',\n                    lng: ''\n                }\n            });\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Container className=\"navigation\" fluid>\n                    <Row>\n                        <Col>\n                            <Button variant=\"primary\" onClick={this.handleAddShow}>\n                                Add New Place\n                            </Button>\n                            <Button variant=\"primary\" onClick={this.props.displayFunc}>\n                                Display {this.props.show ? \"List\" : \"Map\"}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <MyAddModal state={this.state} show={this.state.showAdd} handleChange={this.handleChange}\n                            handleSubmit={this.handleSubmit}\n                            handleClose={this.handleAddClose} handleShow={this.handleAddShow}\n                            savePosition={this.savePosition}/>\n            </>\n        );\n    }\n}\n\n\nclass MyMap extends React.Component {\n    renderJumpoint(jumpoint) {\n        return <Marker key={jumpoint.id} position={[jumpoint.latitude, jumpoint.longitude]} eventHandlers={{\n            click: (e) => {\n                this.props.myFunc(jumpoint.id);\n            }\n        }}>\n            <Popup>\n                <strong>Name:</strong> {jumpoint.name} <br/>\n                <strong>Description:</strong> {jumpoint.description} <br/>\n                <strong>Weather:</strong> {jumpoint.weather} <br/>\n                <div className=\"markerButtons\">\n                    <Button variant=\"outline-primary\" size=\"sm\"\n                            onClick={() => this.props.setIdFunc(jumpoint.id)}>Update</Button>\n                    <Button variant=\"outline-danger\" size=\"sm\"\n                            onClick={() => this.props.delFunc(jumpoint.id)}>Delete</Button>\n                </div>\n            </Popup>\n        </Marker>\n    }\n\n    render() {\n        const center = [49.873398, 15.534668];\n\n        return (\n            <MapContainer className=\"map\" center={center} zoom={8} scrollWheelZoom={true}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {this.props.items.map((item) => {\n                    return this.renderJumpoint(item);\n                })}\n            </MapContainer>\n        )\n    }\n}\n\nclass Data extends React.Component {\n    renderJumpoint(jumpoint) {\n        return <Jumpoint key={jumpoint.id}\n                         jumpoint={jumpoint}\n        />;\n    }\n\n    render() {\n        return (\n            <table className=\"table table-sm table-hover\">\n                <thead className=\"thead-dark\">\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Weather</th>\n                    <th>CreatedAt</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.props.items.map((item) => {\n                    return this.renderJumpoint(item);\n                })}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.switchLocation = this.switchLocation.bind(this);\n        this.getData = this.getData.bind(this);\n        this.setPlaceId = this.setPlaceId.bind(this);\n        this.handleUpdateClose = this.handleUpdateClose.bind(this);\n        this.handleUpdateShow = this.handleUpdateShow.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.savePosition = this.savePosition.bind(this);\n        this.delPosition = this.delPosition.bind(this);\n        this.handleListMapToggle = this.handleListMapToggle.bind(this);\n        this.state = {\n            items: [],\n            showMap: true,\n            showUpdate: false,\n            name: '',\n            description: '',\n            location: {\n                lat: '',\n                lng: ''\n            },\n            placeId: -1\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        return fetch('https://jumpoints.herokuapp.com/api/jumpoints/')\n        // return fetch('http://localhost:8080/api/jumpoints')\n            .then(response => response.json())\n            .then(response => this.setState({items: response}));\n    }\n\n    switchLocation(id) {\n        let originalArr = this.state.items.slice();\n        let arr = originalArr.map(item => item.id);\n        let index = arr.indexOf(id);\n        originalArr.splice(0, 0, originalArr.splice(index, 1)[0])\n        this.setState({'items': originalArr});\n    }\n\n    setPlaceId(id) {\n        this.setState({placeId: id}, () => {\n            this.loadDataByID();\n            this.handleUpdateShow();\n        });\n    }\n\n    handleUpdateClose() {\n        this.setState({\n            showUpdate: false\n        });\n        this.resetData();\n    }\n\n    handleUpdateShow() {\n        this.setState({\n            showUpdate: true\n        });\n    }\n\n    savePosition(latlng) {\n        this.setState({location: latlng});\n    }\n\n    handleListMapToggle() {\n        this.setState({showMap: !this.state.showMap});\n    }\n\n    delPosition(id) {\n        let input = 'https://jumpoints.herokuapp.com/api/jumpoints/' + id;\n        // let input = 'http://www.localhost:8080/api/jumpoints/' + id;\n        fetch(input, {\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then(() => {\n            this.getData();\n            this.setState({\n                showUpdate: false,\n                name: '',\n                description: '',\n                location: {\n                    lat: '',\n                    lng: ''\n                }\n            });\n        });\n    }\n\n    getIndexById(id) {\n        let originalArr = this.state.items.slice();\n        let arr = originalArr.map(item => item.id);\n        let index = arr.indexOf(id);\n        return index\n    }\n\n    loadDataByID() {\n        let index = this.getIndexById(this.state.placeId);\n        console.log(index);\n        let point = this.state.items[index];\n        this.setState({\n            name: point.name,\n            description: point.description,\n            location: {\n                lat: point.latitude,\n                lng: point.longitude\n            }\n        })\n    }\n\n    resetData() {\n        this.setState({\n            showAdd: false,\n            showUpdate: false,\n            name: '',\n            description: '',\n            location: {\n                lat: '',\n                lng: ''\n            }\n        });\n    }\n\n    handleChange(event) {\n        this.setState({description: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let input = 'https://jumpoints.herokuapp.com/api/jumpoints/' + this.state.placeId;\n        // let input = 'http://www.localhost:8080/api/jumpoints/' + this.state.placeId;\n        fetch(input, {\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"description\": this.state.description,\n            })\n        }).then(() => {\n            this.getData();\n            this.setState({\n                showUpdate: false,\n                name: '',\n                description: '',\n                location: {\n                    lat: '',\n                    lng: ''\n                }\n            });\n        });\n    }\n\n    render() {\n        let element = null;\n        if (this.state.showMap) {\n            element = <MyMap items={this.state.items} setIdFunc={this.setPlaceId} myFunc={this.switchLocation}\n                             savePosFunc={this.savePosition} delFunc={this.delPosition}/>;\n        } else {\n            element = <Data items={this.state.items}/>;\n        }\n\n        return (\n            <div className=\"main\">\n                <Menu show={this.state.showMap} updateFunc={this.getData} displayFunc={this.handleListMapToggle}/>\n                <MyUpdateModal state={this.state} show={this.state.showUpdate}\n                               handleChange={this.handleChange}\n                               handleSubmit={this.handleSubmit}\n                               handleClose={this.handleUpdateClose} handleShow={this.handleUpdateShow}\n                               savePosition={this.savePosition}/>\n                {element}\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}